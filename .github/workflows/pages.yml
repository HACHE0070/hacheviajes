name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node if package.json exists
        if: ${{ hashFiles('**/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install frontend dependencies
        run: |
          npm ci -w @hache/frontend || npm install -w @hache/frontend

      - name: Build (best effort)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          set -e
          npm run build || echo "No build script at root; continuing"

      - name: Build frontend workspace
        env:
          BASE_PATH: /${{ github.event.repository.name }}/
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_WS_URL: ${{ secrets.VITE_WS_URL }}
        run: |
          echo "Using BASE_PATH=$BASE_PATH"
          npm run build -w @hache/frontend
          # SPA fallback for GitHub Pages
          cp apps/frontend/dist/index.html apps/frontend/dist/404.html
          # prevent Jekyll processing
          touch apps/frontend/dist/.nojekyll

      - name: Upload artifact (frontend dist)
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/frontend/dist
          name: spa-dist

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: spa-dist
