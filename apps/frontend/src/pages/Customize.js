import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo, useState } from 'react';
import { CalendarDaysIcon, ClockIcon, UserIcon, BuildingOffice2Icon, MapPinIcon } from '@heroicons/react/24/outline';
const cities = ['Dakhla', 'Marrakesh', 'Agadir', 'Casablanca', 'Fes', 'Rabat', 'Tangier', 'Essaouira', 'Chefchaouen', 'Ouarzazate', 'Meknes'];
const flightOptions = [
    { title: 'Economy Class', price: 650, details: '14h 30m · Standard legroom · Meal · 1 bag' },
    { title: 'Premium Economy', price: 950, details: '14h 30m · Extra legroom · Premium meals · 2 bags' },
    { title: 'Business Class', price: 1450, details: '14h 30m · Lie‑flat seats · Gourmet dining · 3 bags' }
];
const hotelOptions = [
    { title: 'Comfort Inn', pricePerNight: 120, details: '3★ · Free WiFi · Pool · Breakfast' },
    { title: 'Boutique Hotel', pricePerNight: 180, details: '4★ · Free WiFi · Concierge · Breakfast' },
    { title: 'Luxury Resort', pricePerNight: 220, details: '5★ · Spa · All meals included' }
];
const activityOptions = [
    { title: 'City Tour', price: 75, details: '4h · Guided · Historical sites' },
    { title: 'Cooking Class', price: 120, details: '3h · Market visit · Local cuisine' },
    { title: 'Boat Excursion', price: 95, details: '5h · Private boat · Lunch included' }
];
function formatCurrency(value) {
    return `€${value.toFixed(0)}`;
}
export default function Customize() {
    const [step, setStep] = useState(1);
    const [destination, setDestination] = useState('Marrakesh');
    const [checkin, setCheckin] = useState('');
    const [checkout, setCheckout] = useState('');
    const [guests, setGuests] = useState(2);
    const [selectedFlight, setSelectedFlight] = useState(null);
    const [selectedHotel, setSelectedHotel] = useState(null);
    const [selectedActivities, setSelectedActivities] = useState([]);
    const nights = useMemo(() => {
        if (!checkin || !checkout)
            return 0;
        const a = new Date(checkin).getTime();
        const b = new Date(checkout).getTime();
        const diff = Math.max(0, b - a);
        return Math.round(diff / (1000 * 60 * 60 * 24));
    }, [checkin, checkout]);
    const activitiesTotal = useMemo(() => selectedActivities.reduce((sum, a) => sum + a.price, 0) * guests, [selectedActivities, guests]);
    const flightsTotal = useMemo(() => (selectedFlight ? selectedFlight.price * guests : 0), [selectedFlight, guests]);
    const hotelsTotal = useMemo(() => (selectedHotel ? selectedHotel.pricePerNight * Math.max(1, nights) * guests : 0), [selectedHotel, nights, guests]);
    const grandTotal = useMemo(() => flightsTotal + hotelsTotal + activitiesTotal, [flightsTotal, hotelsTotal, activitiesTotal]);
    function toggleActivity(activity) {
        setSelectedActivities(prev => prev.some(a => a.title === activity.title)
            ? prev.filter(a => a.title !== activity.title)
            : [...prev, activity]);
    }
    function validateStep1() {
        if (!destination)
            return false;
        if (!checkin || !checkout)
            return false;
        if (nights <= 0)
            return false;
        return true;
    }
    function next() {
        if (step === 1 && !validateStep1())
            return;
        if (step === 2 && !selectedFlight)
            return;
        if (step === 3 && !selectedHotel)
            return;
        setStep(prev => Math.min(6, prev + 1));
    }
    function back() {
        setStep(prev => Math.max(1, prev - 1));
    }
    return (_jsxs("div", { className: "max-w-6xl mx-auto px-6 py-10", children: [_jsxs("div", { className: "mb-8 text-center", children: [_jsx("h1", { className: "text-3xl font-bold mb-2", children: "Customize Your Perfect Trip" }), _jsx("p", { className: "text-white/80", children: "Design your journey with flights, hotels, and activities" })] }), _jsx("div", { className: "glass p-4 mb-6", children: _jsx("div", { className: "relative flex items-center justify-between", children: [{ n: 1, l: 'Destination' }, { n: 2, l: 'Flights' }, { n: 3, l: 'Hotels' }, { n: 4, l: 'Activities' }, { n: 5, l: 'Checkout' }].map(s => (_jsxs("div", { className: `flex flex-col items-center ${step === s.n ? 'text-aqua' : step > s.n ? 'text-white' : 'text-white/60'}`, children: [_jsx("div", { className: `w-10 h-10 rounded-full flex items-center justify-center font-semibold border ${step >= s.n ? 'bg-white text-black' : 'bg-transparent'} border-white/30`, children: s.n }), _jsx("div", { className: "text-xs mt-1", children: s.l })] }, s.n))) }) }), _jsxs("div", { className: "glass p-6", children: [step === 1 && (_jsxs("div", { children: [_jsx("h2", { className: "text-xl font-semibold mb-1", children: "Where and when would you like to go?" }), _jsx("p", { className: "text-white/70 mb-4", children: "Select destination and travel dates" }), _jsxs("div", { className: "grid md:grid-cols-4 gap-4", children: [_jsxs("label", { className: "flex flex-col", children: [_jsxs("span", { className: "mb-1 text-white/80 flex items-center gap-2", children: [_jsx(MapPinIcon, { className: "w-4 h-4" }), "Destination"] }), _jsx("select", { className: "glass p-2", value: destination, onChange: (e) => setDestination(e.target.value), children: cities.map(c => _jsx("option", { value: c, children: c }, c)) })] }), _jsxs("label", { className: "flex flex-col", children: [_jsxs("span", { className: "mb-1 text-white/80 flex items-center gap-2", children: [_jsx(CalendarDaysIcon, { className: "w-4 h-4" }), "Check in"] }), _jsx("input", { className: "glass p-2", type: "date", value: checkin, onChange: e => setCheckin(e.target.value) })] }), _jsxs("label", { className: "flex flex-col", children: [_jsxs("span", { className: "mb-1 text-white/80 flex items-center gap-2", children: [_jsx(CalendarDaysIcon, { className: "w-4 h-4" }), "Check out"] }), _jsx("input", { className: "glass p-2", type: "date", value: checkout, onChange: e => setCheckout(e.target.value) })] }), _jsxs("label", { className: "flex flex-col", children: [_jsxs("span", { className: "mb-1 text-white/80 flex items-center gap-2", children: [_jsx(UserIcon, { className: "w-4 h-4" }), "Guests"] }), _jsx("input", { className: "glass p-2", type: "number", min: 1, value: guests, onChange: e => setGuests(parseInt(e.target.value || '1')) })] })] }), _jsx("div", { className: "mt-6 flex justify-end", children: _jsx("button", { className: "btn-primary", onClick: next, children: "Continue to Flights" }) })] })), step === 2 && (_jsxs("div", { children: [_jsx("h2", { className: "text-xl font-semibold mb-1", children: "Select Your Flight" }), _jsx("p", { className: "text-white/70 mb-4", children: "Choose the flight that fits your schedule and budget" }), _jsx("div", { className: "grid md:grid-cols-3 gap-4", children: flightOptions.map(opt => (_jsxs("div", { className: `p-4 rounded-xl border ${selectedFlight?.title === opt.title ? 'border-aqua bg-white/10' : 'border-white/20'} hover:border-white/40 transition`, children: [_jsxs("div", { className: "flex items-start justify-between mb-1", children: [_jsx("div", { className: "font-semibold", children: opt.title }), _jsx("div", { className: "text-aqua font-semibold", children: formatCurrency(opt.price) })] }), _jsxs("div", { className: "text-white/70 text-sm mb-3 flex items-center gap-2", children: [_jsx(ClockIcon, { className: "w-4 h-4" }), opt.details] }), _jsx("button", { className: `btn ${selectedFlight?.title === opt.title ? '' : 'btn-primary'}`, onClick: () => setSelectedFlight(opt), children: selectedFlight?.title === opt.title ? 'Selected' : 'Select' })] }, opt.title))) }), _jsxs("div", { className: "mt-6 flex justify-between", children: [_jsx("button", { className: "btn-secondary", onClick: back, children: "Back" }), _jsx("button", { className: "btn-primary", onClick: next, children: "Continue to Hotels" })] })] })), step === 3 && (_jsxs("div", { children: [_jsx("h2", { className: "text-xl font-semibold mb-1", children: "Select Your Hotel" }), _jsx("p", { className: "text-white/70 mb-4", children: "Choose accommodation for a comfortable stay" }), _jsx("div", { className: "grid md:grid-cols-3 gap-4", children: hotelOptions.map(opt => (_jsxs("div", { className: `p-4 rounded-xl border ${selectedHotel?.title === opt.title ? 'border-aqua bg-white/10' : 'border-white/20'} hover:border-white/40 transition`, children: [_jsxs("div", { className: "flex items-start justify-between mb-1", children: [_jsx("div", { className: "font-semibold", children: opt.title }), _jsxs("div", { className: "text-aqua font-semibold", children: [formatCurrency(opt.pricePerNight), "/night"] })] }), _jsxs("div", { className: "text-white/70 text-sm mb-3 flex items-center gap-2", children: [_jsx(BuildingOffice2Icon, { className: "w-4 h-4" }), opt.details] }), _jsx("button", { className: `btn ${selectedHotel?.title === opt.title ? '' : 'btn-primary'}`, onClick: () => setSelectedHotel(opt), children: selectedHotel?.title === opt.title ? 'Selected' : 'Select' })] }, opt.title))) }), _jsxs("div", { className: "mt-6 flex justify-between", children: [_jsx("button", { className: "btn-secondary", onClick: back, children: "Back" }), _jsx("button", { className: "btn-primary", onClick: next, children: "Continue to Activities" })] })] })), step === 4 && (_jsxs("div", { children: [_jsx("h2", { className: "text-xl font-semibold mb-1", children: "Select Activities" }), _jsx("p", { className: "text-white/70 mb-4", children: "Choose experiences to make your trip unforgettable" }), _jsx("div", { className: "grid md:grid-cols-3 gap-4", children: activityOptions.map(opt => {
                                    const selected = selectedActivities.some(a => a.title === opt.title);
                                    return (_jsxs("div", { className: `p-4 rounded-xl border ${selected ? 'border-aqua bg-white/10' : 'border-white/20'} hover:border-white/40 transition`, children: [_jsxs("div", { className: "flex items-start justify-between mb-1", children: [_jsx("div", { className: "font-semibold", children: opt.title }), _jsx("div", { className: "text-aqua font-semibold", children: formatCurrency(opt.price) })] }), _jsx("div", { className: "text-white/70 text-sm mb-3", children: opt.details }), _jsx("button", { className: `btn ${selected ? '' : 'btn-primary'}`, onClick: () => toggleActivity(opt), children: selected ? 'Added' : 'Add to Trip' })] }, opt.title));
                                }) }), _jsxs("div", { className: "mt-6 flex justify-between", children: [_jsx("button", { className: "btn-secondary", onClick: back, children: "Back" }), _jsx("button", { className: "btn-primary", onClick: next, children: "Continue to Checkout" })] })] })), step === 5 && (_jsxs("div", { children: [_jsx("h2", { className: "text-xl font-semibold mb-1", children: "Review & Checkout" }), _jsx("p", { className: "text-white/70 mb-4", children: "Review selections and complete booking" }), _jsxs("div", { className: "grid md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "p-4 rounded-xl bg-white/5 border border-white/15", children: [_jsx("div", { className: "font-semibold mb-2", children: "Trip Summary" }), _jsxs("div", { className: "text-sm text-white/80", children: ["Destination: ", destination] }), _jsxs("div", { className: "text-sm text-white/80", children: ["Dates: ", checkin || '—', " \u2192 ", checkout || '—', " (", nights, " nights)"] }), _jsxs("div", { className: "text-sm text-white/80", children: ["Guests: ", guests] })] }), _jsxs("div", { className: "p-4 rounded-xl bg-white/5 border border-white/15", children: [_jsx("div", { className: "font-semibold mb-2", children: "Selected Flight" }), _jsx("div", { className: "text-sm text-white/80", children: selectedFlight?.title || 'Not selected' }), _jsx("div", { className: "text-sm text-white/60", children: selectedFlight?.details || '' })] }), _jsxs("div", { className: "p-4 rounded-xl bg-white/5 border border-white/15", children: [_jsx("div", { className: "font-semibold mb-2", children: "Selected Hotel" }), _jsx("div", { className: "text-sm text-white/80", children: selectedHotel?.title || 'Not selected' }), selectedHotel && _jsxs("div", { className: "text-sm text-white/60", children: [selectedHotel.details, " \u00B7 ", Math.max(1, nights), " nights"] })] }), _jsxs("div", { className: "p-4 rounded-xl bg-white/5 border border-white/15", children: [_jsx("div", { className: "font-semibold mb-2", children: "Activities" }), _jsx("div", { className: "text-sm text-white/80", children: selectedActivities.length ? selectedActivities.map(a => a.title).join(', ') : 'None selected' })] })] }), _jsxs("div", { className: "p-4 rounded-xl bg-white/5 border border-white/15 h-fit", children: [_jsx("div", { className: "font-semibold mb-3", children: "Price Breakdown" }), _jsxs("div", { className: "flex justify-between text-sm text-white/80 py-1", children: [_jsx("span", { children: "Flights" }), _jsx("span", { children: formatCurrency(flightsTotal) })] }), _jsxs("div", { className: "flex justify-between text-sm text-white/80 py-1", children: [_jsx("span", { children: "Hotel" }), _jsx("span", { children: formatCurrency(hotelsTotal) })] }), _jsxs("div", { className: "flex justify-between text-sm text-white/80 py-1", children: [_jsx("span", { children: "Activities" }), _jsx("span", { children: formatCurrency(activitiesTotal) })] }), _jsx("div", { className: "border-t border-white/15 my-3" }), _jsxs("div", { className: "flex justify-between text-base font-semibold", children: [_jsx("span", { children: "Total" }), _jsx("span", { children: formatCurrency(grandTotal) })] }), _jsxs("div", { className: "mt-4 flex gap-3", children: [_jsx("button", { className: "btn-secondary", onClick: back, children: "Back" }), _jsx("button", { className: "btn-primary", onClick: () => setStep(6), children: "Complete Booking & Pay" })] })] })] })] })), step === 6 && (_jsxs("div", { className: "text-center py-16", children: [_jsx("div", { className: "text-5xl mb-4", children: "\u2728" }), _jsx("h2", { className: "text-2xl font-semibold mb-2", children: "Booking Confirmed!" }), _jsx("p", { className: "text-white/80 mb-6", children: "We sent a confirmation email with your trip details." }), _jsx("button", { className: "btn-primary", onClick: () => { setStep(1); setSelectedFlight(null); setSelectedHotel(null); setSelectedActivities([]); }, children: "Plan Another Trip" })] }))] }), _jsxs("div", { className: "max-w-6xl mx-auto mt-6 grid md:grid-cols-3 gap-6", children: [_jsx("div", { className: "md:col-span-2" }), _jsxs("div", { className: "glass p-4", children: [_jsx("div", { className: "font-semibold mb-2", children: "Live Summary" }), _jsxs("div", { className: "text-sm text-white/80", children: ["Route: ", destination] }), _jsxs("div", { className: "text-sm text-white/80", children: ["Dates: ", checkin || '—', " \u2192 ", checkout || '—', " (", nights, " nights)"] }), _jsxs("div", { className: "text-sm text-white/80", children: ["Guests: ", guests] }), _jsx("div", { className: "border-t border-white/10 my-3" }), _jsxs("div", { className: "text-sm text-white/80", children: ["Flights: ", selectedFlight?.title || '—', " ", selectedFlight && `· ${formatCurrency(flightsTotal)}`] }), _jsxs("div", { className: "text-sm text-white/80", children: ["Hotel: ", selectedHotel?.title || '—', " ", selectedHotel && `· ${formatCurrency(hotelsTotal)}`] }), _jsxs("div", { className: "text-sm text-white/80", children: ["Activities: ", selectedActivities.length ? `${selectedActivities.length} · ${formatCurrency(activitiesTotal)}` : '—'] }), _jsx("div", { className: "border-t border-white/10 my-3" }), _jsxs("div", { className: "flex justify-between font-semibold", children: [_jsx("span", { children: "Total" }), _jsx("span", { children: formatCurrency(grandTotal) })] })] })] })] }));
}
