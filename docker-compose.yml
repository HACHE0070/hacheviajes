version: '3.9'
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build: ./apps/backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
      REDIS_URL: ${REDIS_URL}
      PORT: ${PORT:-4000}
      JWT_SECRET: ${JWT_SECRET}
      STRIPE_SECRET: ${STRIPE_SECRET}
      NODE_ENV: development
    ports:
      - "4000:4000"
    volumes:
      - ./apps/backend:/app
      - backend_node_modules:/app/node_modules

  frontend:
    build: ./apps/frontend
    depends_on:
      - backend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:4000}
      VITE_WS_URL: ${VITE_WS_URL:-http://localhost:4000}
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app
      - frontend_node_modules:/app/node_modules

volumes:
  pgdata:
  backend_node_modules:
  frontend_node_modules:
